// DO NOT EDIT.
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: s2clientprotocol/error.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that your are building against the same version of the API
// that was used to generate this file.
fileprivate struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

enum SC2APIProtocol_ActionResult: SwiftProtobuf.Enum {
  typealias RawValue = Int
  case success // = 1
  case notSupported // = 2
  case error // = 3
  case cantQueueThatOrder // = 4
  case retry // = 5
  case cooldown // = 6
  case queueIsFull // = 7
  case rallyQueueIsFull // = 8
  case notEnoughMinerals // = 9
  case notEnoughVespene // = 10
  case notEnoughTerrazine // = 11
  case notEnoughCustom // = 12
  case notEnoughFood // = 13
  case foodUsageImpossible // = 14
  case notEnoughLife // = 15
  case notEnoughShields // = 16
  case notEnoughEnergy // = 17
  case lifeSuppressed // = 18
  case shieldsSuppressed // = 19
  case energySuppressed // = 20
  case notEnoughCharges // = 21
  case cantAddMoreCharges // = 22
  case tooMuchMinerals // = 23
  case tooMuchVespene // = 24
  case tooMuchTerrazine // = 25
  case tooMuchCustom // = 26
  case tooMuchFood // = 27
  case tooMuchLife // = 28
  case tooMuchShields // = 29
  case tooMuchEnergy // = 30
  case mustTargetUnitWithLife // = 31
  case mustTargetUnitWithShields // = 32
  case mustTargetUnitWithEnergy // = 33
  case cantTrade // = 34
  case cantSpend // = 35
  case cantTargetThatUnit // = 36
  case couldntAllocateUnit // = 37
  case unitCantMove // = 38
  case transportIsHoldingPosition // = 39
  case buildTechRequirementsNotMet // = 40
  case cantFindPlacementLocation // = 41
  case cantBuildOnThat // = 42
  case cantBuildTooCloseToDropOff // = 43
  case cantBuildLocationInvalid // = 44
  case cantSeeBuildLocation // = 45
  case cantBuildTooCloseToCreepSource // = 46
  case cantBuildTooCloseToResources // = 47
  case cantBuildTooFarFromWater // = 48
  case cantBuildTooFarFromCreepSource // = 49
  case cantBuildTooFarFromBuildPowerSource // = 50
  case cantBuildOnDenseTerrain // = 51
  case cantTrainTooFarFromTrainPowerSource // = 52
  case cantLandLocationInvalid // = 53
  case cantSeeLandLocation // = 54
  case cantLandTooCloseToCreepSource // = 55
  case cantLandTooCloseToResources // = 56
  case cantLandTooFarFromWater // = 57
  case cantLandTooFarFromCreepSource // = 58
  case cantLandTooFarFromBuildPowerSource // = 59
  case cantLandTooFarFromTrainPowerSource // = 60
  case cantLandOnDenseTerrain // = 61
  case addOnTooFarFromBuilding // = 62
  case mustBuildRefineryFirst // = 63
  case buildingIsUnderConstruction // = 64
  case cantFindDropOff // = 65
  case cantLoadOtherPlayersUnits // = 66
  case notEnoughRoomToLoadUnit // = 67
  case cantUnloadUnitsThere // = 68
  case cantWarpInUnitsThere // = 69
  case cantLoadImmobileUnits // = 70
  case cantRechargeImmobileUnits // = 71
  case cantRechargeUnderConstructionUnits // = 72
  case cantLoadThatUnit // = 73
  case noCargoToUnload // = 74
  case loadAllNoTargetsFound // = 75
  case notWhileOccupied // = 76
  case cantAttackWithoutAmmo // = 77
  case cantHoldAnyMoreAmmo // = 78
  case techRequirementsNotMet // = 79
  case mustLockdownUnitFirst // = 80
  case mustTargetUnit // = 81
  case mustTargetInventory // = 82
  case mustTargetVisibleUnit // = 83
  case mustTargetVisibleLocation // = 84
  case mustTargetWalkableLocation // = 85
  case mustTargetPawnableUnit // = 86
  case youCantControlThatUnit // = 87
  case youCantIssueCommandsToThatUnit // = 88
  case mustTargetResources // = 89
  case requiresHealTarget // = 90
  case requiresRepairTarget // = 91
  case noItemsToDrop // = 92
  case cantHoldAnyMoreItems // = 93
  case cantHoldThat // = 94
  case targetHasNoInventory // = 95
  case cantDropThisItem // = 96
  case cantMoveThisItem // = 97
  case cantPawnThisUnit // = 98
  case mustTargetCaster // = 99
  case cantTargetCaster // = 100
  case mustTargetOuter // = 101
  case cantTargetOuter // = 102
  case mustTargetYourOwnUnits // = 103
  case cantTargetYourOwnUnits // = 104
  case mustTargetFriendlyUnits // = 105
  case cantTargetFriendlyUnits // = 106
  case mustTargetNeutralUnits // = 107
  case cantTargetNeutralUnits // = 108
  case mustTargetEnemyUnits // = 109
  case cantTargetEnemyUnits // = 110
  case mustTargetAirUnits // = 111
  case cantTargetAirUnits // = 112
  case mustTargetGroundUnits // = 113
  case cantTargetGroundUnits // = 114
  case mustTargetStructures // = 115
  case cantTargetStructures // = 116
  case mustTargetLightUnits // = 117
  case cantTargetLightUnits // = 118
  case mustTargetArmoredUnits // = 119
  case cantTargetArmoredUnits // = 120
  case mustTargetBiologicalUnits // = 121
  case cantTargetBiologicalUnits // = 122
  case mustTargetHeroicUnits // = 123
  case cantTargetHeroicUnits // = 124
  case mustTargetRoboticUnits // = 125
  case cantTargetRoboticUnits // = 126
  case mustTargetMechanicalUnits // = 127
  case cantTargetMechanicalUnits // = 128
  case mustTargetPsionicUnits // = 129
  case cantTargetPsionicUnits // = 130
  case mustTargetMassiveUnits // = 131
  case cantTargetMassiveUnits // = 132
  case mustTargetMissile // = 133
  case cantTargetMissile // = 134
  case mustTargetWorkerUnits // = 135
  case cantTargetWorkerUnits // = 136
  case mustTargetEnergyCapableUnits // = 137
  case cantTargetEnergyCapableUnits // = 138
  case mustTargetShieldCapableUnits // = 139
  case cantTargetShieldCapableUnits // = 140
  case mustTargetFlyers // = 141
  case cantTargetFlyers // = 142
  case mustTargetBuriedUnits // = 143
  case cantTargetBuriedUnits // = 144
  case mustTargetCloakedUnits // = 145
  case cantTargetCloakedUnits // = 146
  case mustTargetUnitsInAstasisField // = 147
  case cantTargetUnitsInAstasisField // = 148
  case mustTargetUnderConstructionUnits // = 149
  case cantTargetUnderConstructionUnits // = 150
  case mustTargetDeadUnits // = 151
  case cantTargetDeadUnits // = 152
  case mustTargetRevivableUnits // = 153
  case cantTargetRevivableUnits // = 154
  case mustTargetHiddenUnits // = 155
  case cantTargetHiddenUnits // = 156
  case cantRechargeOtherPlayersUnits // = 157
  case mustTargetHallucinations // = 158
  case cantTargetHallucinations // = 159
  case mustTargetInvulnerableUnits // = 160
  case cantTargetInvulnerableUnits // = 161
  case mustTargetDetectedUnits // = 162
  case cantTargetDetectedUnits // = 163
  case cantTargetUnitWithEnergy // = 164
  case cantTargetUnitWithShields // = 165
  case mustTargetUncommandableUnits // = 166
  case cantTargetUncommandableUnits // = 167
  case mustTargetPreventDefeatUnits // = 168
  case cantTargetPreventDefeatUnits // = 169
  case mustTargetPreventRevealUnits // = 170
  case cantTargetPreventRevealUnits // = 171
  case mustTargetPassiveUnits // = 172
  case cantTargetPassiveUnits // = 173
  case mustTargetStunnedUnits // = 174
  case cantTargetStunnedUnits // = 175
  case mustTargetSummonedUnits // = 176
  case cantTargetSummonedUnits // = 177
  case mustTargetUser1 // = 178
  case cantTargetUser1 // = 179
  case mustTargetUnstoppableUnits // = 180
  case cantTargetUnstoppableUnits // = 181
  case mustTargetResistantUnits // = 182
  case cantTargetResistantUnits // = 183
  case mustTargetDazedUnits // = 184
  case cantTargetDazedUnits // = 185
  case cantLockdown // = 186
  case cantMindControl // = 187
  case mustTargetDestructibles // = 188
  case cantTargetDestructibles // = 189
  case mustTargetItems // = 190
  case cantTargetItems // = 191
  case noCalldownAvailable // = 192
  case waypointListFull // = 193
  case mustTargetRace // = 194
  case cantTargetRace // = 195
  case mustTargetSimilarUnits // = 196
  case cantTargetSimilarUnits // = 197
  case cantFindEnoughTargets // = 198
  case alreadySpawningLarva // = 199
  case cantTargetExhaustedResources // = 200
  case cantUseMinimap // = 201
  case cantUseInfoPanel // = 202
  case orderQueueIsFull // = 203
  case cantHarvestThatResource // = 204
  case harvestersNotRequired // = 205
  case alreadyTargeted // = 206
  case cantAttackWeaponsDisabled // = 207
  case couldntReachTarget // = 208
  case targetIsOutOfRange // = 209
  case targetIsTooClose // = 210
  case targetIsOutOfArc // = 211
  case cantFindTeleportLocation // = 212
  case invalidItemClass // = 213
  case cantFindCancelOrder // = 214

  init() {
    self = .success
  }

  init?(rawValue: Int) {
    switch rawValue {
    case 1: self = .success
    case 2: self = .notSupported
    case 3: self = .error
    case 4: self = .cantQueueThatOrder
    case 5: self = .retry
    case 6: self = .cooldown
    case 7: self = .queueIsFull
    case 8: self = .rallyQueueIsFull
    case 9: self = .notEnoughMinerals
    case 10: self = .notEnoughVespene
    case 11: self = .notEnoughTerrazine
    case 12: self = .notEnoughCustom
    case 13: self = .notEnoughFood
    case 14: self = .foodUsageImpossible
    case 15: self = .notEnoughLife
    case 16: self = .notEnoughShields
    case 17: self = .notEnoughEnergy
    case 18: self = .lifeSuppressed
    case 19: self = .shieldsSuppressed
    case 20: self = .energySuppressed
    case 21: self = .notEnoughCharges
    case 22: self = .cantAddMoreCharges
    case 23: self = .tooMuchMinerals
    case 24: self = .tooMuchVespene
    case 25: self = .tooMuchTerrazine
    case 26: self = .tooMuchCustom
    case 27: self = .tooMuchFood
    case 28: self = .tooMuchLife
    case 29: self = .tooMuchShields
    case 30: self = .tooMuchEnergy
    case 31: self = .mustTargetUnitWithLife
    case 32: self = .mustTargetUnitWithShields
    case 33: self = .mustTargetUnitWithEnergy
    case 34: self = .cantTrade
    case 35: self = .cantSpend
    case 36: self = .cantTargetThatUnit
    case 37: self = .couldntAllocateUnit
    case 38: self = .unitCantMove
    case 39: self = .transportIsHoldingPosition
    case 40: self = .buildTechRequirementsNotMet
    case 41: self = .cantFindPlacementLocation
    case 42: self = .cantBuildOnThat
    case 43: self = .cantBuildTooCloseToDropOff
    case 44: self = .cantBuildLocationInvalid
    case 45: self = .cantSeeBuildLocation
    case 46: self = .cantBuildTooCloseToCreepSource
    case 47: self = .cantBuildTooCloseToResources
    case 48: self = .cantBuildTooFarFromWater
    case 49: self = .cantBuildTooFarFromCreepSource
    case 50: self = .cantBuildTooFarFromBuildPowerSource
    case 51: self = .cantBuildOnDenseTerrain
    case 52: self = .cantTrainTooFarFromTrainPowerSource
    case 53: self = .cantLandLocationInvalid
    case 54: self = .cantSeeLandLocation
    case 55: self = .cantLandTooCloseToCreepSource
    case 56: self = .cantLandTooCloseToResources
    case 57: self = .cantLandTooFarFromWater
    case 58: self = .cantLandTooFarFromCreepSource
    case 59: self = .cantLandTooFarFromBuildPowerSource
    case 60: self = .cantLandTooFarFromTrainPowerSource
    case 61: self = .cantLandOnDenseTerrain
    case 62: self = .addOnTooFarFromBuilding
    case 63: self = .mustBuildRefineryFirst
    case 64: self = .buildingIsUnderConstruction
    case 65: self = .cantFindDropOff
    case 66: self = .cantLoadOtherPlayersUnits
    case 67: self = .notEnoughRoomToLoadUnit
    case 68: self = .cantUnloadUnitsThere
    case 69: self = .cantWarpInUnitsThere
    case 70: self = .cantLoadImmobileUnits
    case 71: self = .cantRechargeImmobileUnits
    case 72: self = .cantRechargeUnderConstructionUnits
    case 73: self = .cantLoadThatUnit
    case 74: self = .noCargoToUnload
    case 75: self = .loadAllNoTargetsFound
    case 76: self = .notWhileOccupied
    case 77: self = .cantAttackWithoutAmmo
    case 78: self = .cantHoldAnyMoreAmmo
    case 79: self = .techRequirementsNotMet
    case 80: self = .mustLockdownUnitFirst
    case 81: self = .mustTargetUnit
    case 82: self = .mustTargetInventory
    case 83: self = .mustTargetVisibleUnit
    case 84: self = .mustTargetVisibleLocation
    case 85: self = .mustTargetWalkableLocation
    case 86: self = .mustTargetPawnableUnit
    case 87: self = .youCantControlThatUnit
    case 88: self = .youCantIssueCommandsToThatUnit
    case 89: self = .mustTargetResources
    case 90: self = .requiresHealTarget
    case 91: self = .requiresRepairTarget
    case 92: self = .noItemsToDrop
    case 93: self = .cantHoldAnyMoreItems
    case 94: self = .cantHoldThat
    case 95: self = .targetHasNoInventory
    case 96: self = .cantDropThisItem
    case 97: self = .cantMoveThisItem
    case 98: self = .cantPawnThisUnit
    case 99: self = .mustTargetCaster
    case 100: self = .cantTargetCaster
    case 101: self = .mustTargetOuter
    case 102: self = .cantTargetOuter
    case 103: self = .mustTargetYourOwnUnits
    case 104: self = .cantTargetYourOwnUnits
    case 105: self = .mustTargetFriendlyUnits
    case 106: self = .cantTargetFriendlyUnits
    case 107: self = .mustTargetNeutralUnits
    case 108: self = .cantTargetNeutralUnits
    case 109: self = .mustTargetEnemyUnits
    case 110: self = .cantTargetEnemyUnits
    case 111: self = .mustTargetAirUnits
    case 112: self = .cantTargetAirUnits
    case 113: self = .mustTargetGroundUnits
    case 114: self = .cantTargetGroundUnits
    case 115: self = .mustTargetStructures
    case 116: self = .cantTargetStructures
    case 117: self = .mustTargetLightUnits
    case 118: self = .cantTargetLightUnits
    case 119: self = .mustTargetArmoredUnits
    case 120: self = .cantTargetArmoredUnits
    case 121: self = .mustTargetBiologicalUnits
    case 122: self = .cantTargetBiologicalUnits
    case 123: self = .mustTargetHeroicUnits
    case 124: self = .cantTargetHeroicUnits
    case 125: self = .mustTargetRoboticUnits
    case 126: self = .cantTargetRoboticUnits
    case 127: self = .mustTargetMechanicalUnits
    case 128: self = .cantTargetMechanicalUnits
    case 129: self = .mustTargetPsionicUnits
    case 130: self = .cantTargetPsionicUnits
    case 131: self = .mustTargetMassiveUnits
    case 132: self = .cantTargetMassiveUnits
    case 133: self = .mustTargetMissile
    case 134: self = .cantTargetMissile
    case 135: self = .mustTargetWorkerUnits
    case 136: self = .cantTargetWorkerUnits
    case 137: self = .mustTargetEnergyCapableUnits
    case 138: self = .cantTargetEnergyCapableUnits
    case 139: self = .mustTargetShieldCapableUnits
    case 140: self = .cantTargetShieldCapableUnits
    case 141: self = .mustTargetFlyers
    case 142: self = .cantTargetFlyers
    case 143: self = .mustTargetBuriedUnits
    case 144: self = .cantTargetBuriedUnits
    case 145: self = .mustTargetCloakedUnits
    case 146: self = .cantTargetCloakedUnits
    case 147: self = .mustTargetUnitsInAstasisField
    case 148: self = .cantTargetUnitsInAstasisField
    case 149: self = .mustTargetUnderConstructionUnits
    case 150: self = .cantTargetUnderConstructionUnits
    case 151: self = .mustTargetDeadUnits
    case 152: self = .cantTargetDeadUnits
    case 153: self = .mustTargetRevivableUnits
    case 154: self = .cantTargetRevivableUnits
    case 155: self = .mustTargetHiddenUnits
    case 156: self = .cantTargetHiddenUnits
    case 157: self = .cantRechargeOtherPlayersUnits
    case 158: self = .mustTargetHallucinations
    case 159: self = .cantTargetHallucinations
    case 160: self = .mustTargetInvulnerableUnits
    case 161: self = .cantTargetInvulnerableUnits
    case 162: self = .mustTargetDetectedUnits
    case 163: self = .cantTargetDetectedUnits
    case 164: self = .cantTargetUnitWithEnergy
    case 165: self = .cantTargetUnitWithShields
    case 166: self = .mustTargetUncommandableUnits
    case 167: self = .cantTargetUncommandableUnits
    case 168: self = .mustTargetPreventDefeatUnits
    case 169: self = .cantTargetPreventDefeatUnits
    case 170: self = .mustTargetPreventRevealUnits
    case 171: self = .cantTargetPreventRevealUnits
    case 172: self = .mustTargetPassiveUnits
    case 173: self = .cantTargetPassiveUnits
    case 174: self = .mustTargetStunnedUnits
    case 175: self = .cantTargetStunnedUnits
    case 176: self = .mustTargetSummonedUnits
    case 177: self = .cantTargetSummonedUnits
    case 178: self = .mustTargetUser1
    case 179: self = .cantTargetUser1
    case 180: self = .mustTargetUnstoppableUnits
    case 181: self = .cantTargetUnstoppableUnits
    case 182: self = .mustTargetResistantUnits
    case 183: self = .cantTargetResistantUnits
    case 184: self = .mustTargetDazedUnits
    case 185: self = .cantTargetDazedUnits
    case 186: self = .cantLockdown
    case 187: self = .cantMindControl
    case 188: self = .mustTargetDestructibles
    case 189: self = .cantTargetDestructibles
    case 190: self = .mustTargetItems
    case 191: self = .cantTargetItems
    case 192: self = .noCalldownAvailable
    case 193: self = .waypointListFull
    case 194: self = .mustTargetRace
    case 195: self = .cantTargetRace
    case 196: self = .mustTargetSimilarUnits
    case 197: self = .cantTargetSimilarUnits
    case 198: self = .cantFindEnoughTargets
    case 199: self = .alreadySpawningLarva
    case 200: self = .cantTargetExhaustedResources
    case 201: self = .cantUseMinimap
    case 202: self = .cantUseInfoPanel
    case 203: self = .orderQueueIsFull
    case 204: self = .cantHarvestThatResource
    case 205: self = .harvestersNotRequired
    case 206: self = .alreadyTargeted
    case 207: self = .cantAttackWeaponsDisabled
    case 208: self = .couldntReachTarget
    case 209: self = .targetIsOutOfRange
    case 210: self = .targetIsTooClose
    case 211: self = .targetIsOutOfArc
    case 212: self = .cantFindTeleportLocation
    case 213: self = .invalidItemClass
    case 214: self = .cantFindCancelOrder
    default: return nil
    }
  }

  var rawValue: Int {
    switch self {
    case .success: return 1
    case .notSupported: return 2
    case .error: return 3
    case .cantQueueThatOrder: return 4
    case .retry: return 5
    case .cooldown: return 6
    case .queueIsFull: return 7
    case .rallyQueueIsFull: return 8
    case .notEnoughMinerals: return 9
    case .notEnoughVespene: return 10
    case .notEnoughTerrazine: return 11
    case .notEnoughCustom: return 12
    case .notEnoughFood: return 13
    case .foodUsageImpossible: return 14
    case .notEnoughLife: return 15
    case .notEnoughShields: return 16
    case .notEnoughEnergy: return 17
    case .lifeSuppressed: return 18
    case .shieldsSuppressed: return 19
    case .energySuppressed: return 20
    case .notEnoughCharges: return 21
    case .cantAddMoreCharges: return 22
    case .tooMuchMinerals: return 23
    case .tooMuchVespene: return 24
    case .tooMuchTerrazine: return 25
    case .tooMuchCustom: return 26
    case .tooMuchFood: return 27
    case .tooMuchLife: return 28
    case .tooMuchShields: return 29
    case .tooMuchEnergy: return 30
    case .mustTargetUnitWithLife: return 31
    case .mustTargetUnitWithShields: return 32
    case .mustTargetUnitWithEnergy: return 33
    case .cantTrade: return 34
    case .cantSpend: return 35
    case .cantTargetThatUnit: return 36
    case .couldntAllocateUnit: return 37
    case .unitCantMove: return 38
    case .transportIsHoldingPosition: return 39
    case .buildTechRequirementsNotMet: return 40
    case .cantFindPlacementLocation: return 41
    case .cantBuildOnThat: return 42
    case .cantBuildTooCloseToDropOff: return 43
    case .cantBuildLocationInvalid: return 44
    case .cantSeeBuildLocation: return 45
    case .cantBuildTooCloseToCreepSource: return 46
    case .cantBuildTooCloseToResources: return 47
    case .cantBuildTooFarFromWater: return 48
    case .cantBuildTooFarFromCreepSource: return 49
    case .cantBuildTooFarFromBuildPowerSource: return 50
    case .cantBuildOnDenseTerrain: return 51
    case .cantTrainTooFarFromTrainPowerSource: return 52
    case .cantLandLocationInvalid: return 53
    case .cantSeeLandLocation: return 54
    case .cantLandTooCloseToCreepSource: return 55
    case .cantLandTooCloseToResources: return 56
    case .cantLandTooFarFromWater: return 57
    case .cantLandTooFarFromCreepSource: return 58
    case .cantLandTooFarFromBuildPowerSource: return 59
    case .cantLandTooFarFromTrainPowerSource: return 60
    case .cantLandOnDenseTerrain: return 61
    case .addOnTooFarFromBuilding: return 62
    case .mustBuildRefineryFirst: return 63
    case .buildingIsUnderConstruction: return 64
    case .cantFindDropOff: return 65
    case .cantLoadOtherPlayersUnits: return 66
    case .notEnoughRoomToLoadUnit: return 67
    case .cantUnloadUnitsThere: return 68
    case .cantWarpInUnitsThere: return 69
    case .cantLoadImmobileUnits: return 70
    case .cantRechargeImmobileUnits: return 71
    case .cantRechargeUnderConstructionUnits: return 72
    case .cantLoadThatUnit: return 73
    case .noCargoToUnload: return 74
    case .loadAllNoTargetsFound: return 75
    case .notWhileOccupied: return 76
    case .cantAttackWithoutAmmo: return 77
    case .cantHoldAnyMoreAmmo: return 78
    case .techRequirementsNotMet: return 79
    case .mustLockdownUnitFirst: return 80
    case .mustTargetUnit: return 81
    case .mustTargetInventory: return 82
    case .mustTargetVisibleUnit: return 83
    case .mustTargetVisibleLocation: return 84
    case .mustTargetWalkableLocation: return 85
    case .mustTargetPawnableUnit: return 86
    case .youCantControlThatUnit: return 87
    case .youCantIssueCommandsToThatUnit: return 88
    case .mustTargetResources: return 89
    case .requiresHealTarget: return 90
    case .requiresRepairTarget: return 91
    case .noItemsToDrop: return 92
    case .cantHoldAnyMoreItems: return 93
    case .cantHoldThat: return 94
    case .targetHasNoInventory: return 95
    case .cantDropThisItem: return 96
    case .cantMoveThisItem: return 97
    case .cantPawnThisUnit: return 98
    case .mustTargetCaster: return 99
    case .cantTargetCaster: return 100
    case .mustTargetOuter: return 101
    case .cantTargetOuter: return 102
    case .mustTargetYourOwnUnits: return 103
    case .cantTargetYourOwnUnits: return 104
    case .mustTargetFriendlyUnits: return 105
    case .cantTargetFriendlyUnits: return 106
    case .mustTargetNeutralUnits: return 107
    case .cantTargetNeutralUnits: return 108
    case .mustTargetEnemyUnits: return 109
    case .cantTargetEnemyUnits: return 110
    case .mustTargetAirUnits: return 111
    case .cantTargetAirUnits: return 112
    case .mustTargetGroundUnits: return 113
    case .cantTargetGroundUnits: return 114
    case .mustTargetStructures: return 115
    case .cantTargetStructures: return 116
    case .mustTargetLightUnits: return 117
    case .cantTargetLightUnits: return 118
    case .mustTargetArmoredUnits: return 119
    case .cantTargetArmoredUnits: return 120
    case .mustTargetBiologicalUnits: return 121
    case .cantTargetBiologicalUnits: return 122
    case .mustTargetHeroicUnits: return 123
    case .cantTargetHeroicUnits: return 124
    case .mustTargetRoboticUnits: return 125
    case .cantTargetRoboticUnits: return 126
    case .mustTargetMechanicalUnits: return 127
    case .cantTargetMechanicalUnits: return 128
    case .mustTargetPsionicUnits: return 129
    case .cantTargetPsionicUnits: return 130
    case .mustTargetMassiveUnits: return 131
    case .cantTargetMassiveUnits: return 132
    case .mustTargetMissile: return 133
    case .cantTargetMissile: return 134
    case .mustTargetWorkerUnits: return 135
    case .cantTargetWorkerUnits: return 136
    case .mustTargetEnergyCapableUnits: return 137
    case .cantTargetEnergyCapableUnits: return 138
    case .mustTargetShieldCapableUnits: return 139
    case .cantTargetShieldCapableUnits: return 140
    case .mustTargetFlyers: return 141
    case .cantTargetFlyers: return 142
    case .mustTargetBuriedUnits: return 143
    case .cantTargetBuriedUnits: return 144
    case .mustTargetCloakedUnits: return 145
    case .cantTargetCloakedUnits: return 146
    case .mustTargetUnitsInAstasisField: return 147
    case .cantTargetUnitsInAstasisField: return 148
    case .mustTargetUnderConstructionUnits: return 149
    case .cantTargetUnderConstructionUnits: return 150
    case .mustTargetDeadUnits: return 151
    case .cantTargetDeadUnits: return 152
    case .mustTargetRevivableUnits: return 153
    case .cantTargetRevivableUnits: return 154
    case .mustTargetHiddenUnits: return 155
    case .cantTargetHiddenUnits: return 156
    case .cantRechargeOtherPlayersUnits: return 157
    case .mustTargetHallucinations: return 158
    case .cantTargetHallucinations: return 159
    case .mustTargetInvulnerableUnits: return 160
    case .cantTargetInvulnerableUnits: return 161
    case .mustTargetDetectedUnits: return 162
    case .cantTargetDetectedUnits: return 163
    case .cantTargetUnitWithEnergy: return 164
    case .cantTargetUnitWithShields: return 165
    case .mustTargetUncommandableUnits: return 166
    case .cantTargetUncommandableUnits: return 167
    case .mustTargetPreventDefeatUnits: return 168
    case .cantTargetPreventDefeatUnits: return 169
    case .mustTargetPreventRevealUnits: return 170
    case .cantTargetPreventRevealUnits: return 171
    case .mustTargetPassiveUnits: return 172
    case .cantTargetPassiveUnits: return 173
    case .mustTargetStunnedUnits: return 174
    case .cantTargetStunnedUnits: return 175
    case .mustTargetSummonedUnits: return 176
    case .cantTargetSummonedUnits: return 177
    case .mustTargetUser1: return 178
    case .cantTargetUser1: return 179
    case .mustTargetUnstoppableUnits: return 180
    case .cantTargetUnstoppableUnits: return 181
    case .mustTargetResistantUnits: return 182
    case .cantTargetResistantUnits: return 183
    case .mustTargetDazedUnits: return 184
    case .cantTargetDazedUnits: return 185
    case .cantLockdown: return 186
    case .cantMindControl: return 187
    case .mustTargetDestructibles: return 188
    case .cantTargetDestructibles: return 189
    case .mustTargetItems: return 190
    case .cantTargetItems: return 191
    case .noCalldownAvailable: return 192
    case .waypointListFull: return 193
    case .mustTargetRace: return 194
    case .cantTargetRace: return 195
    case .mustTargetSimilarUnits: return 196
    case .cantTargetSimilarUnits: return 197
    case .cantFindEnoughTargets: return 198
    case .alreadySpawningLarva: return 199
    case .cantTargetExhaustedResources: return 200
    case .cantUseMinimap: return 201
    case .cantUseInfoPanel: return 202
    case .orderQueueIsFull: return 203
    case .cantHarvestThatResource: return 204
    case .harvestersNotRequired: return 205
    case .alreadyTargeted: return 206
    case .cantAttackWeaponsDisabled: return 207
    case .couldntReachTarget: return 208
    case .targetIsOutOfRange: return 209
    case .targetIsTooClose: return 210
    case .targetIsOutOfArc: return 211
    case .cantFindTeleportLocation: return 212
    case .invalidItemClass: return 213
    case .cantFindCancelOrder: return 214
    }
  }

}

#if swift(>=4.2)

extension SC2APIProtocol_ActionResult: CaseIterable {
  // Support synthesized by the compiler.
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension SC2APIProtocol_ActionResult: SwiftProtobuf._ProtoNameProviding {
  static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "Success"),
    2: .same(proto: "NotSupported"),
    3: .same(proto: "Error"),
    4: .same(proto: "CantQueueThatOrder"),
    5: .same(proto: "Retry"),
    6: .same(proto: "Cooldown"),
    7: .same(proto: "QueueIsFull"),
    8: .same(proto: "RallyQueueIsFull"),
    9: .same(proto: "NotEnoughMinerals"),
    10: .same(proto: "NotEnoughVespene"),
    11: .same(proto: "NotEnoughTerrazine"),
    12: .same(proto: "NotEnoughCustom"),
    13: .same(proto: "NotEnoughFood"),
    14: .same(proto: "FoodUsageImpossible"),
    15: .same(proto: "NotEnoughLife"),
    16: .same(proto: "NotEnoughShields"),
    17: .same(proto: "NotEnoughEnergy"),
    18: .same(proto: "LifeSuppressed"),
    19: .same(proto: "ShieldsSuppressed"),
    20: .same(proto: "EnergySuppressed"),
    21: .same(proto: "NotEnoughCharges"),
    22: .same(proto: "CantAddMoreCharges"),
    23: .same(proto: "TooMuchMinerals"),
    24: .same(proto: "TooMuchVespene"),
    25: .same(proto: "TooMuchTerrazine"),
    26: .same(proto: "TooMuchCustom"),
    27: .same(proto: "TooMuchFood"),
    28: .same(proto: "TooMuchLife"),
    29: .same(proto: "TooMuchShields"),
    30: .same(proto: "TooMuchEnergy"),
    31: .same(proto: "MustTargetUnitWithLife"),
    32: .same(proto: "MustTargetUnitWithShields"),
    33: .same(proto: "MustTargetUnitWithEnergy"),
    34: .same(proto: "CantTrade"),
    35: .same(proto: "CantSpend"),
    36: .same(proto: "CantTargetThatUnit"),
    37: .same(proto: "CouldntAllocateUnit"),
    38: .same(proto: "UnitCantMove"),
    39: .same(proto: "TransportIsHoldingPosition"),
    40: .same(proto: "BuildTechRequirementsNotMet"),
    41: .same(proto: "CantFindPlacementLocation"),
    42: .same(proto: "CantBuildOnThat"),
    43: .same(proto: "CantBuildTooCloseToDropOff"),
    44: .same(proto: "CantBuildLocationInvalid"),
    45: .same(proto: "CantSeeBuildLocation"),
    46: .same(proto: "CantBuildTooCloseToCreepSource"),
    47: .same(proto: "CantBuildTooCloseToResources"),
    48: .same(proto: "CantBuildTooFarFromWater"),
    49: .same(proto: "CantBuildTooFarFromCreepSource"),
    50: .same(proto: "CantBuildTooFarFromBuildPowerSource"),
    51: .same(proto: "CantBuildOnDenseTerrain"),
    52: .same(proto: "CantTrainTooFarFromTrainPowerSource"),
    53: .same(proto: "CantLandLocationInvalid"),
    54: .same(proto: "CantSeeLandLocation"),
    55: .same(proto: "CantLandTooCloseToCreepSource"),
    56: .same(proto: "CantLandTooCloseToResources"),
    57: .same(proto: "CantLandTooFarFromWater"),
    58: .same(proto: "CantLandTooFarFromCreepSource"),
    59: .same(proto: "CantLandTooFarFromBuildPowerSource"),
    60: .same(proto: "CantLandTooFarFromTrainPowerSource"),
    61: .same(proto: "CantLandOnDenseTerrain"),
    62: .same(proto: "AddOnTooFarFromBuilding"),
    63: .same(proto: "MustBuildRefineryFirst"),
    64: .same(proto: "BuildingIsUnderConstruction"),
    65: .same(proto: "CantFindDropOff"),
    66: .same(proto: "CantLoadOtherPlayersUnits"),
    67: .same(proto: "NotEnoughRoomToLoadUnit"),
    68: .same(proto: "CantUnloadUnitsThere"),
    69: .same(proto: "CantWarpInUnitsThere"),
    70: .same(proto: "CantLoadImmobileUnits"),
    71: .same(proto: "CantRechargeImmobileUnits"),
    72: .same(proto: "CantRechargeUnderConstructionUnits"),
    73: .same(proto: "CantLoadThatUnit"),
    74: .same(proto: "NoCargoToUnload"),
    75: .same(proto: "LoadAllNoTargetsFound"),
    76: .same(proto: "NotWhileOccupied"),
    77: .same(proto: "CantAttackWithoutAmmo"),
    78: .same(proto: "CantHoldAnyMoreAmmo"),
    79: .same(proto: "TechRequirementsNotMet"),
    80: .same(proto: "MustLockdownUnitFirst"),
    81: .same(proto: "MustTargetUnit"),
    82: .same(proto: "MustTargetInventory"),
    83: .same(proto: "MustTargetVisibleUnit"),
    84: .same(proto: "MustTargetVisibleLocation"),
    85: .same(proto: "MustTargetWalkableLocation"),
    86: .same(proto: "MustTargetPawnableUnit"),
    87: .same(proto: "YouCantControlThatUnit"),
    88: .same(proto: "YouCantIssueCommandsToThatUnit"),
    89: .same(proto: "MustTargetResources"),
    90: .same(proto: "RequiresHealTarget"),
    91: .same(proto: "RequiresRepairTarget"),
    92: .same(proto: "NoItemsToDrop"),
    93: .same(proto: "CantHoldAnyMoreItems"),
    94: .same(proto: "CantHoldThat"),
    95: .same(proto: "TargetHasNoInventory"),
    96: .same(proto: "CantDropThisItem"),
    97: .same(proto: "CantMoveThisItem"),
    98: .same(proto: "CantPawnThisUnit"),
    99: .same(proto: "MustTargetCaster"),
    100: .same(proto: "CantTargetCaster"),
    101: .same(proto: "MustTargetOuter"),
    102: .same(proto: "CantTargetOuter"),
    103: .same(proto: "MustTargetYourOwnUnits"),
    104: .same(proto: "CantTargetYourOwnUnits"),
    105: .same(proto: "MustTargetFriendlyUnits"),
    106: .same(proto: "CantTargetFriendlyUnits"),
    107: .same(proto: "MustTargetNeutralUnits"),
    108: .same(proto: "CantTargetNeutralUnits"),
    109: .same(proto: "MustTargetEnemyUnits"),
    110: .same(proto: "CantTargetEnemyUnits"),
    111: .same(proto: "MustTargetAirUnits"),
    112: .same(proto: "CantTargetAirUnits"),
    113: .same(proto: "MustTargetGroundUnits"),
    114: .same(proto: "CantTargetGroundUnits"),
    115: .same(proto: "MustTargetStructures"),
    116: .same(proto: "CantTargetStructures"),
    117: .same(proto: "MustTargetLightUnits"),
    118: .same(proto: "CantTargetLightUnits"),
    119: .same(proto: "MustTargetArmoredUnits"),
    120: .same(proto: "CantTargetArmoredUnits"),
    121: .same(proto: "MustTargetBiologicalUnits"),
    122: .same(proto: "CantTargetBiologicalUnits"),
    123: .same(proto: "MustTargetHeroicUnits"),
    124: .same(proto: "CantTargetHeroicUnits"),
    125: .same(proto: "MustTargetRoboticUnits"),
    126: .same(proto: "CantTargetRoboticUnits"),
    127: .same(proto: "MustTargetMechanicalUnits"),
    128: .same(proto: "CantTargetMechanicalUnits"),
    129: .same(proto: "MustTargetPsionicUnits"),
    130: .same(proto: "CantTargetPsionicUnits"),
    131: .same(proto: "MustTargetMassiveUnits"),
    132: .same(proto: "CantTargetMassiveUnits"),
    133: .same(proto: "MustTargetMissile"),
    134: .same(proto: "CantTargetMissile"),
    135: .same(proto: "MustTargetWorkerUnits"),
    136: .same(proto: "CantTargetWorkerUnits"),
    137: .same(proto: "MustTargetEnergyCapableUnits"),
    138: .same(proto: "CantTargetEnergyCapableUnits"),
    139: .same(proto: "MustTargetShieldCapableUnits"),
    140: .same(proto: "CantTargetShieldCapableUnits"),
    141: .same(proto: "MustTargetFlyers"),
    142: .same(proto: "CantTargetFlyers"),
    143: .same(proto: "MustTargetBuriedUnits"),
    144: .same(proto: "CantTargetBuriedUnits"),
    145: .same(proto: "MustTargetCloakedUnits"),
    146: .same(proto: "CantTargetCloakedUnits"),
    147: .same(proto: "MustTargetUnitsInAStasisField"),
    148: .same(proto: "CantTargetUnitsInAStasisField"),
    149: .same(proto: "MustTargetUnderConstructionUnits"),
    150: .same(proto: "CantTargetUnderConstructionUnits"),
    151: .same(proto: "MustTargetDeadUnits"),
    152: .same(proto: "CantTargetDeadUnits"),
    153: .same(proto: "MustTargetRevivableUnits"),
    154: .same(proto: "CantTargetRevivableUnits"),
    155: .same(proto: "MustTargetHiddenUnits"),
    156: .same(proto: "CantTargetHiddenUnits"),
    157: .same(proto: "CantRechargeOtherPlayersUnits"),
    158: .same(proto: "MustTargetHallucinations"),
    159: .same(proto: "CantTargetHallucinations"),
    160: .same(proto: "MustTargetInvulnerableUnits"),
    161: .same(proto: "CantTargetInvulnerableUnits"),
    162: .same(proto: "MustTargetDetectedUnits"),
    163: .same(proto: "CantTargetDetectedUnits"),
    164: .same(proto: "CantTargetUnitWithEnergy"),
    165: .same(proto: "CantTargetUnitWithShields"),
    166: .same(proto: "MustTargetUncommandableUnits"),
    167: .same(proto: "CantTargetUncommandableUnits"),
    168: .same(proto: "MustTargetPreventDefeatUnits"),
    169: .same(proto: "CantTargetPreventDefeatUnits"),
    170: .same(proto: "MustTargetPreventRevealUnits"),
    171: .same(proto: "CantTargetPreventRevealUnits"),
    172: .same(proto: "MustTargetPassiveUnits"),
    173: .same(proto: "CantTargetPassiveUnits"),
    174: .same(proto: "MustTargetStunnedUnits"),
    175: .same(proto: "CantTargetStunnedUnits"),
    176: .same(proto: "MustTargetSummonedUnits"),
    177: .same(proto: "CantTargetSummonedUnits"),
    178: .same(proto: "MustTargetUser1"),
    179: .same(proto: "CantTargetUser1"),
    180: .same(proto: "MustTargetUnstoppableUnits"),
    181: .same(proto: "CantTargetUnstoppableUnits"),
    182: .same(proto: "MustTargetResistantUnits"),
    183: .same(proto: "CantTargetResistantUnits"),
    184: .same(proto: "MustTargetDazedUnits"),
    185: .same(proto: "CantTargetDazedUnits"),
    186: .same(proto: "CantLockdown"),
    187: .same(proto: "CantMindControl"),
    188: .same(proto: "MustTargetDestructibles"),
    189: .same(proto: "CantTargetDestructibles"),
    190: .same(proto: "MustTargetItems"),
    191: .same(proto: "CantTargetItems"),
    192: .same(proto: "NoCalldownAvailable"),
    193: .same(proto: "WaypointListFull"),
    194: .same(proto: "MustTargetRace"),
    195: .same(proto: "CantTargetRace"),
    196: .same(proto: "MustTargetSimilarUnits"),
    197: .same(proto: "CantTargetSimilarUnits"),
    198: .same(proto: "CantFindEnoughTargets"),
    199: .same(proto: "AlreadySpawningLarva"),
    200: .same(proto: "CantTargetExhaustedResources"),
    201: .same(proto: "CantUseMinimap"),
    202: .same(proto: "CantUseInfoPanel"),
    203: .same(proto: "OrderQueueIsFull"),
    204: .same(proto: "CantHarvestThatResource"),
    205: .same(proto: "HarvestersNotRequired"),
    206: .same(proto: "AlreadyTargeted"),
    207: .same(proto: "CantAttackWeaponsDisabled"),
    208: .same(proto: "CouldntReachTarget"),
    209: .same(proto: "TargetIsOutOfRange"),
    210: .same(proto: "TargetIsTooClose"),
    211: .same(proto: "TargetIsOutOfArc"),
    212: .same(proto: "CantFindTeleportLocation"),
    213: .same(proto: "InvalidItemClass"),
    214: .same(proto: "CantFindCancelOrder"),
  ]
}
